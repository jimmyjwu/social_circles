from django.http import HttpResponse
from django.shortcuts import render
import facebook
import time

access_token = 'CAACEdEose0cBAFfoesEXdOxaZALNKzH96C2cleKFZClyPaxhdF7ZB7lfiieik48SuRSSxbodFvIkePgaMrR2Y7S4KePt3juHfrxe24d7mm49uzJJ4KZBcahywEIlHAriwOct8OqgZAicoWWQCOLoIZC3cZA1XeQ32UWeVjUa0fUXsVYbnqyqfGtPMb3aV4eXlUZD'


def index(request):
	# Temporary access access_token generated by Facebook's Graph API Explorer
	
	graph = facebook.GraphAPI(access_token, timeout=15)
	profile = graph.get_object("me")
	
	start = time.time()
	friends_data = graph.get_connections("me", "friends")['data']
	end = time.time()
	print('Graph API request for friends took ' + str('%.2f' % (end - start)) + ' seconds.')

	start = time.time()
	friends_data = graph.fql('SELECT uid, name FROM user WHERE uid IN (SELECT uid2 FROM friend WHERE uid1 = me())')
	end = time.time()
	print('FQL query for friends took ' + str('%.2f' % (end - start)) + ' seconds.')

	start = time.time()
	connections_between_friends = graph.fql('SELECT uid1, uid2 FROM friend WHERE uid1 IN (SELECT uid2 FROM friend WHERE uid1=me()) AND uid2 IN (SELECT uid2 FROM friend WHERE uid1=me())')
	end = time.time()
	print('FQL query for connections between friends took ' + str('%.2f' % (end - start)) + ' seconds.')

	# Assemble a list of friend dictionaries with names and IDs
	friends = []
	for friend_data in friends_data:
		friends += [
			{
				'name': friend_data['name'],
				'ID': friend_data['uid'],
			}
		]

	# WARNING: The code below runs extremely slowly due to large number of requests over network.
	"""
	# Add, to each friend dictionary, a list of mutual friends with the user
	for friend in friends:
		print(counter)
		friend['mutual_friends'] = graph.get_connections(friend['ID'], "mutualfriends")['data']
	"""

	# Render page with friend information
	return render(request, 'friends/index.html', {'friends': friends, 'number_of_connections_between_friends': len(connections_between_friends)})








